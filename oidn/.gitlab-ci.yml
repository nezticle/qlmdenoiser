## Copyright 2009-2021 Intel Corporation
## SPDX-License-Identifier: Apache-2.0

stages:
  - build
  - test
  - deploy
  - scan
  - report-scan

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  OIDN_ROOT_DIR:          "$CI_PROJECT_DIR"
  PYTHONUNBUFFERED:       1
  ErrorActionPreference:  stop

.build:
  stage: build
  only:
    - pushes
    - schedules
    - web
  artifacts:
    name: "$CI_JOB_NAME"
    untracked: true
    when: always
    expire_in: 3 days

.test:
  stage: test
  only:
    - pushes
    - schedules
    - web
  artifacts:
    name: "$CI_JOB_NAME"
    paths:
      - test.log
    when: always
    expire_in: 3 days

.package:
  stage: deploy
  only:
    - schedules
    - web
  needs: []
  artifacts:
    name: "$CI_JOB_NAME"
    paths:
      - build/*.tar.gz
      - build/*.zip
    expire_in: 1 week

## -----------------------------------------------------------------------------
## Linux
## -----------------------------------------------------------------------------

build-centos7-icc:
  extends: .build
  tags:
    - docker
  image: $DOCKER_REGISTRY/oidn-build:centos7
  script: scripts/build.py install --compiler icc -D OIDN_WARN_AS_ERRORS=ON

test-centos7-icc-avx512:
  extends: .test
  tags:
    - docker
    - avx512vl
  image: $DOCKER_REGISTRY/oidn-build:centos7
  needs:
    - job: build-centos7-icc
      artifacts: true
  script: scripts/test.py

test-centos7-icc-knl:
  extends: .test
  tags:
    - docker-knl
  image: $DOCKER_REGISTRY/oidn-build:centos7
  needs:
    - job: build-centos7-icc
      artifacts: true
  script: scripts/test.py

test-centos7-icc-avx2:
  extends: .test
  tags:
    - docker
    - avx2
  image: $DOCKER_REGISTRY/oidn-build:centos7
  needs:
    - job: build-centos7-icc
      artifacts: true
  script: scripts/test.py

test-centos7-icc-sse4:
  extends: .test
  tags:
    - docker
    - avx512vl
  image: $DOCKER_REGISTRY/oidn-build:centos7
  needs:
    - job: build-centos7-icc
      artifacts: true
  script: scripts/test.py --arch pnr

package-linux:
  extends: .package
  tags:
    - docker
  image: $DOCKER_REGISTRY/oidn-build:centos7
  script: scripts/build.py package --compiler icc

## -----------------------------------------------------------------------------

build-ubuntu18.04-gcc:
  extends: .build
  tags:
    - docker
  image: $DOCKER_REGISTRY/oidn-build:ubuntu18.04
  script: scripts/build.py install --compiler gcc -D OIDN_WARN_AS_ERRORS=ON

test-ubuntu18.04-gcc-avx512:
  extends: .test
  tags:
    - docker
    - avx512vl
  image: $DOCKER_REGISTRY/oidn-build:ubuntu18.04
  needs:
    - job: build-ubuntu18.04-gcc
      artifacts: true
  script: scripts/test.py

test-ubuntu18.04-gcc-avx2:
  extends: .test
  tags:
    - docker
    - avx2
  image: $DOCKER_REGISTRY/oidn-build:ubuntu18.04
  needs:
    - job: build-ubuntu18.04-gcc
      artifacts: true
  script: scripts/test.py

test-ubuntu18.04-gcc-sse4:
  extends: .test
  tags:
    - docker
    - avx512vl
  image: $DOCKER_REGISTRY/oidn-build:ubuntu18.04
  needs:
    - job: build-ubuntu18.04-gcc
      artifacts: true
  script: scripts/test.py --arch pnr

build-ubuntu18.04-gcc-debug:
  extends: .build
  tags:
    - docker
  image: $DOCKER_REGISTRY/oidn-build:ubuntu18.04
  script: scripts/build.py install --compiler gcc --config Debug -D OIDN_WARN_AS_ERRORS=ON

test-ubuntu18.04-gcc-debug-avx512:
  extends: .test
  tags:
    - docker
    - avx512vl
  image: $DOCKER_REGISTRY/oidn-build:ubuntu18.04
  needs:
    - job: build-ubuntu18.04-gcc-debug
      artifacts: true
  script: scripts/test.py

test-ubuntu18.04-gcc-debug-avx2:
  extends: .test
  tags:
    - docker
    - avx2
  image: $DOCKER_REGISTRY/oidn-build:ubuntu18.04
  needs:
    - job: build-ubuntu18.04-gcc-debug
      artifacts: true
  script: scripts/test.py

build-ubuntu18.04-gcc-static:
  extends: .build
  tags:
    - docker
  image: $DOCKER_REGISTRY/oidn-build:ubuntu18.04
  script: scripts/build.py --compiler gcc -D OIDN_STATIC_LIB=ON

build-ubuntu18.04-gcc-namespace:
  extends: .build
  tags:
    - docker
  image: $DOCKER_REGISTRY/oidn-build:ubuntu18.04
  script: scripts/build.py --compiler gcc -D OIDN_API_NAMESPACE=myoidn

build-ubuntu18.04-gcc-tbb2007:
  extends: .build
  tags:
    - docker
  image: $DOCKER_REGISTRY/oidn-build:ubuntu18.04
  script:
    - mkdir build
    - cd build
    - cmake -D OIDN_WARN_AS_ERRORS=ON ..
    - make -j VERBOSE=1

build-ubuntu18.04-clang:
  extends: .build
  tags:
    - docker
  image: $DOCKER_REGISTRY/oidn-build:ubuntu18.04
  script: scripts/build.py --compiler clang

## -----------------------------------------------------------------------------

build-ubuntu20.04-gcc-oiio2.1:
  extends: .build
  tags:
    - docker
  image: $DOCKER_REGISTRY/oidn-build:ubuntu20.04
  script:
    - mkdir build
    - cd build
    - cmake -D OIDN_APPS_OPENIMAGEIO=ON -D OIDN_WARN_AS_ERRORS=ON ..
    - make -j VERBOSE=1

build-ubuntu20.04-gcc-minimal:
  extends: .build
  tags:
    - docker
  image: $DOCKER_REGISTRY/oidn-build:ubuntu20.04
  script: scripts/build.py --compiler gcc -D OIDN_FILTER_RT=OFF -D OIDN_FILTER_RTLIGHTMAP=OFF

## -----------------------------------------------------------------------------

build-arch-gcc-oiio2.3:
  extends: .build
  tags:
    - docker
  image: $DOCKER_REGISTRY/oidn-build:arch
  script:
    - mkdir build
    - cd build
    - cmake -D OIDN_APPS_OPENIMAGEIO=ON ..
    - make -j VERBOSE=1

## -----------------------------------------------------------------------------
## macOS
## -----------------------------------------------------------------------------

build-macos-icc:
  extends: .build
  tags:
    - osx
    - sign # build might fail on other machines
  script: scripts/build.py install --compiler icc -D OIDN_WARN_AS_ERRORS=ON

build-macos-icc-debug:
  extends: .build
  tags:
    - osx
    - sign # build might fail on other machines
  script: scripts/build.py install --compiler icc --config Debug -D OIDN_WARN_AS_ERRORS=ON

test-macos-icc-avx512:
  extends: .test
  tags:
    - osx
    - avx512f
  needs:
    - job: build-macos-icc
      artifacts: true
  script: scripts/test.py

test-macos-icc-avx2:
  extends: .test
  tags:
    - osx
    - avx2
    - sign # other machines are too slow
  needs:
    - job: build-macos-icc
      artifacts: true
  script: scripts/test.py

build-macos-clang:
  extends: .build
  tags:
    - osx
    - avx2 # exclude slower machines
  script: scripts/build.py install --compiler clang -D OIDN_WARN_AS_ERRORS=ON

build-macos-clang-debug:
  extends: .build
  tags:
    - osx
    - avx2 # exclude slower machines
  script: scripts/build.py install --compiler clang --config Debug -D OIDN_WARN_AS_ERRORS=ON

test-macos-clang-avx512:
  extends: .test
  tags:
    - osx
    - avx512f
  needs:
    - job: build-macos-clang
      artifacts: true
  script: scripts/test.py

test-macos-clang-avx2:
  extends: .test
  tags:
    - osx
    - avx2
    - sign # other machines are too slow
  needs:
    - job: build-macos-clang
      artifacts: true
  script: scripts/test.py

build-macos-clang-static:
  extends: .build
  tags:
    - osx
    - avx2 # exclude slower machines
  script: scripts/build.py --compiler clang -D OIDN_STATIC_LIB=ON

build-macos-clang-namespace:
  extends: .build
  tags:
    - osx
    - avx2 # exclude slower machines
  script: scripts/build.py --compiler clang -D OIDN_API_NAMESPACE=myoidn

package-macos:
  extends: .package
  tags:
    - osx
    - sign
  script: scripts/build.py package --compiler icc

## -----------------------------------------------------------------------------

build-macos-clang-arm:
  extends: .build
  tags:
    - mac-arm
  script: scripts/build.py install --compiler clang -D OIDN_WARN_AS_ERRORS=ON

test-macos-clang-arm:
  extends: .test
  tags:
    - mac-arm
  needs:
    - job: build-macos-clang-arm
      artifacts: true
  script: scripts/test.py

build-macos-clang-debug-arm:
  extends: .build
  tags:
    - mac-arm
  script: scripts/build.py install --compiler clang --config Debug -D OIDN_WARN_AS_ERRORS=ON

test-macos-clang-debug-arm:
  extends: .test
  tags:
    - mac-arm
  needs:
    - job: build-macos-clang-debug-arm
      artifacts: true
  script: scripts/test.py

build-macos-clang-static-arm:
  extends: .build
  tags:
    - mac-arm
  script: scripts/build.py --compiler clang -D OIDN_STATIC_LIB=ON

build-macos-clang-namespace-arm:
  extends: .build
  tags:
    - mac-arm
  script: scripts/build.py --compiler clang -D OIDN_API_NAMESPACE=myoidn

## -----------------------------------------------------------------------------
## Windows
## -----------------------------------------------------------------------------

build-windows-icc:
  extends: .build
  tags:
    - win10
    - msvc15
    - icc19
  script: python scripts/build.py install --compiler msvc15-icc19 -D OIDN_WARN_AS_ERRORS=ON

test-windows-icc-avx512:
  extends: .test
  tags:
    - win10
    - msvc15
    - icc19
    - avx512vl
  needs:
    - job: build-windows-icc
      artifacts: true
  script: python scripts/test.py

#test-windows-icc-avx2:
#  extends: .test
#  tags:
#    - win10
#    - msvc15
#    - icc19
#    - avx2
#  needs:
#    - job: build-windows-icc
#      artifacts: true
#  script: python scripts/test.py

build-windows-msvc15:
  extends: .build
  tags:
    - win10
    - msvc15
  script: python scripts/build.py --compiler msvc15

build-windows-msvc15-debug:
  extends: .build
  tags:
    - win10
    - msvc15
  script: python scripts/build.py --compiler msvc15 --config Debug

build-windows-msvc15-static:
  extends: .build
  tags:
    - win10
    - msvc15
  script: python scripts/build.py --compiler msvc15 -D OIDN_STATIC_LIB=ON

build-windows-msvc15-namespace:
  extends: .build
  tags:
    - win10
    - msvc15
  script: python scripts/build.py --compiler msvc15 -D OIDN_API_NAMESPACE=myoidn

build-windows-msvc16:
  extends: .build
  tags:
    - win10
    - msvc16
  script: python scripts/build.py install --compiler msvc16 -D OIDN_WARN_AS_ERRORS=ON

test-windows-msvc16-avx512:
  extends: .test
  tags:
    - win10
    - msvc16
    - avx512vl
  needs:
    - job: build-windows-msvc16
      artifacts: true
  script: python scripts/test.py

#test-windows-msvc16-avx2:
#  extends: .test
#  tags:
#    - win10
#    - msvc16
#    - avx2
#  needs:
#    - job: build-windows-msvc16
#      artifacts: true
#  script: python scripts/test.py

package-windows:
  extends: .package
  tags:
    - win10
    - msvc15
    - icc19
  script: python scripts/build.py package --compiler msvc15-icc19

## -----------------------------------------------------------------------------
## Scans
## -----------------------------------------------------------------------------

av:
  stage: scan
  tags: [docker]
  image: $DOCKER_REGISTRY/clamav:ubuntu20.04
  only:
    - schedules
    - web
  needs:
    - package-linux
    - package-macos
    - package-windows
  script:
    - freshclam | tee -a /tmp/av_scan.log
    - clamscan -va --max-filesize=512M --max-scansize=2048M --alert-broken --alert-exceeds-max build/oidn-* | tee -a /tmp/av_scan.log
    - $CI_TOOLS_PATH/bin/store-files.sh $CI_PROJECT_NAME $CI_PIPELINE_ID av /tmp/av_scan.log
    
bdba:
  stage: scan
  tags: [docker]
  image: $DOCKER_REGISTRY/oidn-build:centos7
  only:
    - schedules
    - web
  needs:
    - package-linux
    - package-macos
    - package-windows
  script:
    - $CI_TOOLS_PATH/bin/bdba.sh "build/oidn-*"
    - $CI_TOOLS_PATH/bin/store-files.sh $CI_PROJECT_NAME $CI_PIPELINE_ID bdba "oidn-*.pdf"
    - $CI_TOOLS_PATH/bin/store-files.sh $CI_PROJECT_NAME $CI_PIPELINE_ID bdba "oidn-*.csv"
  artifacts:
    paths:
      - oidn-*.pdf
      - oidn-*.csv

kw-build-scan:
  stage: scan
  tags: [docker]
  image: $DOCKER_REGISTRY/oidn-build:ubuntu18.04
  script: scripts/kw-build.sh
  artifacts:
    paths:
      - ./klocwork/*
  needs: []

protex-scan:
  stage: scan
  tags:
    - docker
  script: scripts/protex_scan.sh
  image: amd64/openjdk:8
  needs: []
  # Will fail regularly, do not break nightlies because of that.
  allow_failure: true
  artifacts:
    name: "$CI_JOB_NAME"
    paths:
      - ip_protex.log
    when: always
    expire_in: 1 week

snyk-scan:
  stage: scan
  tags: [ snyk ]
  needs: []
  script:
    - $CI_TOOLS_PATH/bin/snyk.sh

kw-check-issues:
  stage: report-scan
  tags: [docker]
  image: $DOCKER_REGISTRY/ospray/docker-images:centos7
  needs: [kw-build-scan]
  script:
    - scripts/kw-check-issues.sh
  allow_failure: true

kw-gen-report:
  stage: report-scan
  tags: [docker]
  image: $DOCKER_REGISTRY/ospray/docker-images:centos7
  needs: [kw-build-scan]
  script:
    - scripts/kw-gen-report.sh
    - scripts/store-files.sh $CI_PROJECT_NAME $CI_PIPELINE_ID klocwork "klocwork/report.log"
  artifacts:
    paths:
      - klocwork/report.log

